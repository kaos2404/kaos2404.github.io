{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common-imports.module.ts","webpack:///./src/app/header-component/header.component.html","webpack:///./src/app/header-component/header.component.ts","webpack:///./src/app/header-component/logout-modal/logout-modal.component.html","webpack:///./src/app/header-component/logout-modal/logout-modal.component.ts","webpack:///./src/app/postLoginModule/home-component/home.guard.ts","webpack:///./src/app/preLoginModule/login-component/login.component.html","webpack:///./src/app/preLoginModule/login-component/login.component.ts","webpack:///./src/app/preLoginModule/login-component/login.guard.ts","webpack:///./src/app/preLoginModule/pre-login.module.ts","webpack:///./src/app/shared/services/http-interceptor.service.ts","webpack:///./src/app/shared/services/local-storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../postLoginModule/post-login.module.ngfactory\": [\n\t\t\"./src/app/postLoginModule/post-login.module.ngfactory.js\",\n\t\t\"postLoginModule-post-login-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","<app-header></app-header>\n<div style=\"margin: 0 auto; height: 80vh; padding: 16px 8px 8px 8px;\" class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LogoutModal } from './header-component/logout-modal/logout-modal.component';\nimport { CommonImportsModule } from './common-imports.module';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header-component/header.component';\nimport { PreLoginModule } from './preLoginModule/pre-login.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LocalStorageService } from './shared/services/local-storage.service';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LogoutModal\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    PreLoginModule,\n    CommonImportsModule,\n    NgIdleKeepaliveModule.forRoot(),\n    FormsModule\n  ],\n  providers: [\n    LocalStorageService\n  ],\n  entryComponents: [ LogoutModal ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { CustomInterceptor } from './shared/services/http-interceptor.service';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: CustomInterceptor, multi: true}\r\n  ]\r\n})\r\n  export class CommonImportsModule {}\r\n","<nav class=\"navbar bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-header\">\r\n      <a class=\"navbar-brand\">\r\n        Brontoo Tech\r\n      </a>\r\n    </div>\r\n    <a *ngIf=\"service.getUser() !== null\" class=\"material-icons pull-right\"\r\n      (click)=\"logout()\"\r\n      matTooltip=\"Logout\" style=\"font-size: 32px;\">power_settings_new</a>\r\n  </div>\r\n</nav>\r\n<mat-progress-bar *ngIf=\"service.progressBar\" mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\r\n","import { LogoutModal } from './logout-modal/logout-modal.component';\r\nimport { LocalStorageService } from './../shared/services/local-storage.service';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent {\r\n  constructor(public service: LocalStorageService, public dialog: MatDialog){}\r\n  logout(){\r\n    const dialogRef = this.dialog.open(LogoutModal);\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n      if(data == true){\r\n        this.service.logout();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  Do you really want to logout?\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close>No</button>\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\r\n  </mat-dialog-actions>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './logout-modal.component.html',\r\n  styles: [\r\n    ` button {\r\n        background-color: rgba(240, 102, 0, 0.4);\r\n        color: white;\r\n        font-weight: bold;\r\n      }\r\n      button[cdkFocusInitial] {\r\n        background-color: rgb(240, 102, 0);\r\n      }`\r\n    ]\r\n})\r\nexport class LogoutModal {\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'src/app/shared/services/local-storage.service';\r\n\r\n@Injectable()\r\nexport class HomeGuard implements CanActivate {\r\n  constructor(public service: LocalStorageService, public router: Router){}\r\n  canActivate(route: ActivatedRouteSnapshot, routerstate: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.service.getUser() === null){\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"login-card\">\r\n  <mat-card-header class=\"login-card-header\">\r\n    <mat-card-title class=\"login-card-title pull-left\">Login</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"login-card-content\">\r\n    <div class=\"form-group\">\r\n        <div class=\"form-block\">\r\n          <input class=\"form-control\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"user id\"\r\n            formControlName=\"username\"\r\n            autocomplete=\"off\">\r\n          <i matSuffix class=\"material-icons\"\r\n            matTooltip=\"Enter your mobile number or email\">account_circle</i>\r\n        </div>\r\n        <span\r\n          *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\"\r\n          class=\"help-block\">Please enter a valid number or email</span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div class=\"form-block\">\r\n          <input class=\"form-control\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            formControlName=\"password\">\r\n            <i matSuffix\r\n            matTooltip=\"Atleast one of each: capital, small, special character and number. Min length 8 and max 20\"\r\n            class=\"material-icons\">vpn_key</i>\r\n        </div>\r\n        <span\r\n          *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\"\r\n          class=\"help-block\">Please enter a valid password</span>\r\n      </div>\r\n  </mat-card-content>\r\n  <mat-card-actions align=\"center\">\r\n      <button mat-raised-button class=\"login-submit\" [disabled]=\"!loginForm.valid\" type=\"submit\">SUBMIT</button>\r\n  </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import { LocalStorageService } from '../../shared/services/local-storage.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  emailPattern=/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  numberPattern = /^[7-9][0-9]{9}$/;\r\n  passwordPattern = /^(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$/;\r\n\r\n  constructor(public service: LocalStorageService, public router: Router){}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      'username': new FormControl(null, [Validators.required, this.userNameValidator.bind(this)]),\r\n      //'password': new FormControl(null, [Validators.required, this.passwordValidator.bind(this)])\r\n      'password': new FormControl(null)\r\n    })\r\n  }\r\n\r\n  onSubmit(){\r\n    this.service.login(this.loginForm.get('username').value);\r\n  }\r\n\r\n  userNameValidator(formControl: FormControl): {[s: string]: boolean} {\r\n    if(formControl.value !== null && (formControl.value.match(this.emailPattern) || formControl.value.match(this.numberPattern))){\r\n          return null;\r\n    }\r\n    return {'isInValid': true};\r\n  }\r\n\r\n  passwordValidator(formControl: FormControl): {[s: string]: boolean} {\r\n    if(formControl.value !== null && formControl.value.match(this.passwordPattern)){\r\n      return null;\r\n    }\r\n    return {'isInValid': true};\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from 'src/app/shared/services/local-storage.service';\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(public service: LocalStorageService, public router: Router){}\r\n  canActivate(route: ActivatedRouteSnapshot, routerstate: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if(this.service.getUser() !== null){\r\n      this.router.navigate(['/home']);\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { HomeGuard } from './../postLoginModule/home-component/home.guard';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonImportsModule } from '../common-imports.module';\r\nimport { LoginComponent } from './login-component/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginGuard } from './login-component/login.guard';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\r\n  { path: 'login', component: LoginComponent, canActivate: [LoginGuard] },\r\n  { path: 'home', loadChildren: '../postLoginModule/post-login.module#PostLoginModule', canActivate: [HomeGuard]},\r\n  { path: \"**\", redirectTo: 'login' }\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    CommonImportsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers:[ LoginGuard, HomeGuard ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class PreLoginModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Injectable()\r\nexport class CustomInterceptor implements HttpInterceptor {\r\n  constructor(public service: LocalStorageService){}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log('Interceptor called');\r\n    this.service.progressBar = true;\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  progressBar: boolean = false;\r\n  constructor(public router: Router){}\r\n  login(userid: string){\r\n    localStorage.setItem('userid', userid);\r\n    this.router.navigate(['/home']);\r\n  }\r\n  logout(){\r\n    localStorage.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n  getUser(): string {\r\n    return localStorage.getItem('userid');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}