{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/services/themes.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/http.service.ts","./src/app/app.module.ts","./src/app/splashscreen/splashscreen.component.ts","./src/app/splashscreen/splashscreen.component.html","./src/app/shared/services/http-interceptor.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\r\nimport { DomSanitizer } from '@angular/platform-browser'\r\n\r\n@Injectable()\r\nexport class ThemeService {\r\n  public cssUrl\r\n  public dark: boolean\r\n  constructor(private domSanitzier: DomSanitizer) {\r\n    this.cssUrl = this.domSanitzier.bypassSecurityTrustResourceUrl('assets/css/light.css')\r\n  }\r\n  public toggleTheme() {\r\n    this.dark = !this.dark\r\n    this.cssUrl = this.domSanitzier.bypassSecurityTrustResourceUrl(\r\n      this.dark ? 'assets/css/dark.css' : 'assets/css/light.css'\r\n    )\r\n  }\r\n}\r\n","import { Component } from '@angular/core'\n\nimport { ThemeService } from './shared/services/themes.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public theme: ThemeService) {}\n}\n","<link rel=\"stylesheet\" type=\"text/css\" [href]=\"theme.cssUrl\" />\n<router-outlet></router-outlet>\n","import { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n  public get<T>(url: string, params?: { [key: string]: any }): Observable<T> {\r\n    return this.http.get<T>(url, {\r\n      params\r\n    })\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { AppRoutingModule } from './app-routing.module'\nimport { AppComponent } from './app.component'\nimport { HttpIntercepter } from './shared/services/http-interceptor.service'\nimport { HttpService } from './shared/services/http.service'\nimport { ThemeService } from './shared/services/themes.service'\nimport { SplashscreenComponent } from './splashscreen/splashscreen.component'\n\n@NgModule({\n  declarations: [AppComponent, SplashscreenComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule],\n  providers: [\n    ThemeService,\n    HttpService,\n    { provide: HTTP_INTERCEPTORS, useClass: HttpIntercepter, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  templateUrl: './splashscreen.component.html',\r\n  styleUrls: ['./splashscreen.component.scss']\r\n})\r\nexport class SplashscreenComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n  ngOnInit() {\r\n    setTimeout(() => this.router.navigate(['/home']), 2000)\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"icon-container\">\r\n    <i class=\"icon fas fa-rocket\"></i>\r\n  </div>\r\n</div>\r\n","import { HttpEvent, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { BehaviorSubject, Observable } from 'rxjs'\r\nimport { tap } from 'rxjs/operators'\r\n\r\nimport { ThemeService } from './themes.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpIntercepter implements HttpIntercepter {\r\n  public spinner = new BehaviorSubject<boolean>(false)\r\n  constructor(private theme: ThemeService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.spinner.next(true)\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        (event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            this.spinner.next(false)\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.spinner.next(false)\r\n        }\r\n      )\r\n    )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { SplashscreenComponent } from './splashscreen/splashscreen.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashscreenComponent\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then(t => t.HomeModule)\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import 'hammerjs'\n\nimport { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}